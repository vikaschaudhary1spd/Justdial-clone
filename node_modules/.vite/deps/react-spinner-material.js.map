{
  "version": 3,
  "sources": ["../../react-spinner-material/lib/inject.js", "../../react-spinner-material/lib/index.js"],
  "sourcesContent": ["\"use strict\";\nvar css = \"\\n.react-spinner-material {\\n  width: 80px;\\n  height: 80px;\\n  border-radius: 50%;\\n  border: 10px solid #333;\\n  box-sizing: border-box;\\n  -webkit-animation: rsm-sweep 1s linear alternate infinite, rsm-rotate 0.8s linear infinite;\\n          animation: rsm-sweep 1s linear alternate infinite, rsm-rotate 0.8s linear infinite;\\n}\\n\\n@keyframes rsm-rotate {\\n  from {\\n    transform: rotate(0deg);\\n  }\\n  to {\\n    transform: rotate(360deg);\\n  }\\n}\\n\\n@-webkit-keyframes rsm-rotate {\\n  from {\\n    -webkit-transform: rotate(0deg);\\n  }\\n  to {\\n    -webkit-transform: rotate(360deg);\\n  }\\n}\\n\\n@keyframes rsm-sweep {\\n  0% {\\n    -webkit-clip-path: polygon(0% 0%, 0% 0%, 0% 0%, 50% 50%, 0% 0%, 0% 0%, 0% 0%);\\n    clip-path: polygon(0% 0%, 0% 0%, 0% 0%, 50% 50%, 0% 0%, 0% 0%, 0% 0%);\\n  }\\n  50% {\\n    -webkit-clip-path: polygon(0% 0%, 0% 100%, 0% 100%, 50% 50%, 100% 0%, 100% 0%, 0% 0%);\\n    clip-path: polygon(0% 0%, 0% 100%, 0% 100%, 50% 50%, 100% 0%, 100% 0%, 0% 0%);\\n  }\\n  100% {\\n    -webkit-clip-path: polygon(0% 0%, 0% 100%, 100% 100%, 50% 50%, 100% 100%, 100% 0%, 0% 0%);\\n    clip-path: polygon(0% 0%, 0% 100%, 100% 100%, 50% 50%, 100% 100%, 100% 0%, 0% 0%);\\n  }\\n}\\n\\n@-webkit-keyframes rsm-sweep {\\n  0% {\\n    -webkit-clip-path: polygon(0% 0%, 0% 0%, 0% 0%, 50% 50%, 0% 0%, 0% 0%, 0% 0%);\\n  }\\n  50% {\\n    -webkit-clip-path: polygon(0% 0%, 0% 100%, 0% 100%, 50% 50%, 100% 0%, 100% 0%, 0% 0%);\\n  }\\n  100% {\\n    -webkit-clip-path: polygon(0% 0%, 0% 100%, 100% 100%, 50% 50%, 100% 100%, 100% 0%, 0% 0%);\\n  }\\n}\\n\";\nvar ID = 'spinner_id_style';\n(function () {\n    if (typeof window === 'undefined') {\n        return;\n    }\n    if (!document.getElementById(ID)) {\n        var head = document.head || document.getElementsByTagName('head')[0];\n        var sprc = document.createElement('style');\n        sprc.id = ID;\n        sprc.type = \"text/css\";\n        if (sprc.styleSheet) {\n            sprc.styleSheet.cssText = css;\n        }\n        else {\n            sprc.appendChild(document.createTextNode(css));\n        }\n        if (head) {\n            head.appendChild(sprc);\n        }\n    }\n})();\n", "\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = __importStar(require(\"react\"));\nrequire(\"./inject\");\nvar Spinner = function (_a) {\n    var _b = _a.visible, visible = _b === void 0 ? true : _b, _c = _a.color, color = _c === void 0 ? '#333333' : _c, _d = _a.stroke, stroke = _d === void 0 ? 5 : _d, _e = _a.radius, radius = _e === void 0 ? 40 : _e, rest = __rest(_a, [\"visible\", \"color\", \"stroke\", \"radius\"]);\n    if (!visible) {\n        return null;\n    }\n    return (React.createElement(\"div\", __assign({}, rest, { className: \"react-spinner-material\", style: {\n            width: radius,\n            height: radius,\n            borderColor: color,\n            borderWidth: stroke\n        } })));\n};\nexports.default = Spinner;\n"],
  "mappings": ";;;;;;;;AAAA;AAAA;AAAA;AACA,QAAI,MAAM;AACV,QAAI,KAAK;AACT,KAAC,WAAY;AACT,UAAI,OAAO,WAAW,aAAa;AAC/B;AAAA,MACJ;AACA,UAAI,CAAC,SAAS,eAAe,EAAE,GAAG;AAC9B,YAAI,OAAO,SAAS,QAAQ,SAAS,qBAAqB,MAAM,EAAE,CAAC;AACnE,YAAI,OAAO,SAAS,cAAc,OAAO;AACzC,aAAK,KAAK;AACV,aAAK,OAAO;AACZ,YAAI,KAAK,YAAY;AACjB,eAAK,WAAW,UAAU;AAAA,QAC9B,OACK;AACD,eAAK,YAAY,SAAS,eAAe,GAAG,CAAC;AAAA,QACjD;AACA,YAAI,MAAM;AACN,eAAK,YAAY,IAAI;AAAA,QACzB;AAAA,MACJ;AAAA,IACJ,GAAG;AAAA;AAAA;;;ACtBH;AAAA;AACA,QAAI,WAAY,WAAQ,QAAK,YAAa,WAAY;AAClD,iBAAW,OAAO,UAAU,SAAS,GAAG;AACpC,iBAAS,GAAG,IAAI,GAAG,IAAI,UAAU,QAAQ,IAAI,GAAG,KAAK;AACjD,cAAI,UAAU,CAAC;AACf,mBAAS,KAAK,EAAG,KAAI,OAAO,UAAU,eAAe,KAAK,GAAG,CAAC;AAC1D,cAAE,CAAC,IAAI,EAAE,CAAC;AAAA,QAClB;AACA,eAAO;AAAA,MACX;AACA,aAAO,SAAS,MAAM,MAAM,SAAS;AAAA,IACzC;AACA,QAAI,SAAU,WAAQ,QAAK,UAAW,SAAU,GAAG,GAAG;AAClD,UAAI,IAAI,CAAC;AACT,eAAS,KAAK,EAAG,KAAI,OAAO,UAAU,eAAe,KAAK,GAAG,CAAC,KAAK,EAAE,QAAQ,CAAC,IAAI;AAC9E,UAAE,CAAC,IAAI,EAAE,CAAC;AACd,UAAI,KAAK,QAAQ,OAAO,OAAO,0BAA0B;AACrD,iBAAS,IAAI,GAAG,IAAI,OAAO,sBAAsB,CAAC,GAAG,IAAI,EAAE,QAAQ,IAAK,KAAI,EAAE,QAAQ,EAAE,CAAC,CAAC,IAAI;AAC1F,YAAE,EAAE,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;AAAA;AACxB,aAAO;AAAA,IACX;AACA,QAAI,eAAgB,WAAQ,QAAK,gBAAiB,SAAU,KAAK;AAC7D,UAAI,OAAO,IAAI,WAAY,QAAO;AAClC,UAAI,SAAS,CAAC;AACd,UAAI,OAAO;AAAM,iBAAS,KAAK,IAAK,KAAI,OAAO,eAAe,KAAK,KAAK,CAAC,EAAG,QAAO,CAAC,IAAI,IAAI,CAAC;AAAA;AAC7F,aAAO,SAAS,IAAI;AACpB,aAAO;AAAA,IACX;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,QAAI,QAAQ,aAAa,eAAgB;AACzC;AACA,QAAI,UAAU,SAAU,IAAI;AACxB,UAAI,KAAK,GAAG,SAAS,UAAU,OAAO,SAAS,OAAO,IAAI,KAAK,GAAG,OAAO,QAAQ,OAAO,SAAS,YAAY,IAAI,KAAK,GAAG,QAAQ,SAAS,OAAO,SAAS,IAAI,IAAI,KAAK,GAAG,QAAQ,SAAS,OAAO,SAAS,KAAK,IAAI,OAAO,OAAO,IAAI,CAAC,WAAW,SAAS,UAAU,QAAQ,CAAC;AAC9Q,UAAI,CAAC,SAAS;AACV,eAAO;AAAA,MACX;AACA,aAAQ,MAAM,cAAc,OAAO,SAAS,CAAC,GAAG,MAAM,EAAE,WAAW,0BAA0B,OAAO;AAAA,QAC5F,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,aAAa;AAAA,QACb,aAAa;AAAA,MACjB,EAAE,CAAC,CAAC;AAAA,IACZ;AACA,YAAQ,UAAU;AAAA;AAAA;",
  "names": []
}
